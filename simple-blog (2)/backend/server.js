const express = require('express');
const mongoose = require('mongoose');
const cors = require('cors');
const app = express();

app.use(cors());
app.use(express.json());

// ะััะทะบะฐ ะบัะผ MongoDB ะบะพะฝัะตะนะฝะตัะฐ
mongoose.connect('mongodb://mongo:27017/blog', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
})
.then(() => console.log('๐ข ะกะฒััะทะฐะฝ ั MongoDB'))
.catch((err) => console.error('๐ด ะัะตัะบะฐ ะฟัะธ ัะฒััะทะฒะฐะฝะต ั MongoDB:', err));

// ะขะตััะพะฒ ะผะฐััััั ะทะฐ ะฝะฐัะฐะปะฝะฐ ัััะฐะฝะธัะฐ
app.get('/', (req, res) => {
  res.send('โ ะกััะฒัััั ัะฐะฑะพัะธ ะธ ะต ัะฒััะทะฐะฝ ั MongoDB!');
});

// ะัะธะผะตัะตะฝ ะผะฐััััั (ะผะพะถะต ะดะฐ ัะต ะทะฐะผะตะฝะธ ั ัะตะฐะปะฝะฐ ะปะพะณะธะบะฐ)
app.get('/api/posts', (req, res) => {
  res.json([{ title: 'ะัะธะผะตัะฝะฐ ะฟัะฑะปะธะบะฐัะธั', content: 'ะขะตะบัั ะฝะฐ ะฟัะฑะปะธะบะฐัะธััะฐ' }]);
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`๐ ะกััะฒัััั ัะปััะฐ ะฝะฐ http://localhost:${PORT}`);
});